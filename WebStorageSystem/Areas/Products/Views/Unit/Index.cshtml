@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@model UnitModel

@{
    ViewData["Title"] = "List of Units";
    var requestToken = Antiforgery.GetAndStoreTokens(Context).RequestToken;
}

<h1>List of Units</h1>

<p>
    <a asp-action="Create">Create New Unit</a>
</p>

<table id="dtUnit" class="table table-striped table-bordered table-dark nowrap" style="width:100%">
    <thead>
    <tr>
        <th>@Html.DisplayNameFor(model => model.InventoryNumber)</th>
        <th>Product Type</th>
        <th>Manufacturer</th>
        <th>Product</th>
        <th>@Html.DisplayNameFor(model => model.SerialNumber)</th>
        <th>Current Location</th>
        <th>Default Location</th>
        <th>Bundle</th>
        <th>Vendor</th>
        <th>@Html.DisplayNameFor(model => model.LastTransferTime)</th>
        <th>@Html.DisplayNameFor(model => model.LastCheckTime)</th>
        <th>@Html.DisplayNameFor(model => model.HasDefect)</th>
        <th>@Html.DisplayNameFor(model => model.IsDeleted)</th>
        <th>@Html.DisplayNameFor(model => model.Action)</th>
    </tr>
    </thead>
</table>
<input id="RequestVerificationToken" type="hidden" value="@requestToken" />

<partial name="DeleteRestoreModal" />
@if (TempData["Error"] != null)
{
    await Html.RenderPartialAsync("ErrorModal", TempData["Error"]);
}