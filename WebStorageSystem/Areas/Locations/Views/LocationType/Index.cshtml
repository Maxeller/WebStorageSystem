@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@model LocationTypeModel

@{
    ViewData["Title"] = "Location Type List";
    var requestToken = Antiforgery.GetAndStoreTokens(Context).RequestToken;
}

<h1>List of Location Types</h1>
<div>
    <p>
        <a asp-action="Create">Create New Location Type</a>
    </p>
</div>

<table id="dtLocationType" class="table table-striped table-bordered table-dark table-responsive">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.Name)</th>
            <th>@Html.DisplayNameFor(model => model.Description)</th>
            <th>@Html.DisplayNameFor(model => model.CreatedDate)</th>
            <th>@Html.DisplayNameFor(model => model.ModifiedDate)</th>
            <th>@Html.DisplayNameFor(model => model.IsDeleted)</th>
            <th>@Html.DisplayNameFor(model => model.Action)</th>
        </tr>
    </thead>
</table>
<input id="RequestVerificationToken" type="hidden" value="@requestToken" />

<partial name="DeleteRestoreModal" />
@if (TempData["Error"] != null)
{
    await Html.RenderPartialAsync("ErrorModal", TempData["Error"]);
}